

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                                           Thu Sep 26 14:00:00 2024


     1                           	processor	16F628A
     2                           	pagewidth 132
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	code,global,class=CODE,delta=2
     9                           	psect	data,global,class=STRCODE,delta=2,noexec
    10                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	por_vec,global,abs,ovrld,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13     0008                     
    14                           	psect	edata
    15     0000                     stk_offset	set	0
    16     0000                     auto_size	set	0
    17                           
    18                           ; stack_auto defines a symbol /name/_offset which equates to the
    19                           ; stack offset of the auto object in question
    20     0000                     
    21                           ; stack_param defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the parameter object in question
    23     0000                     
    24                           ; alloc_stack adjusts the SP to allocate space for auto objects
    25                           ; it also links in to the btemp symbol so that can be used
    26     0000                     
    27                           ; restore_stack adjusts the SP to remove all auto and parameter
    28                           ; objects from the stack prior to returning from a function
    29     0000                     main:
    30                           
    31                           	psect	por_vec
    32     0000                     	org	0
    33     0000  200F               	call	init
    34     0001                     loop:
    35                           
    36                           ;nop
    37                           ;nop
    38     0001  2801               	goto	loop
    39     0004                     	org	4
    40     0004  00F0               	movwf	112
    41     0005  0E03               	swapf	3,w
    42     0006  00F1               	movwf	113
    43     0007  1303               	bcf	3,6
    44     0008  1283               	bcf	3,5
    45     0009  201C               	call	interrupt
    46     000A  0E71               	swapf	113,w
    47     000B  0083               	movwf	3
    48     000C  0EF0               	swapf	112,f
    49     000D  0E70               	swapf	112,w
    50     000E  0009               	retfie
    51     000F                     init:	
    52                           ;PSECT por_vec, global, class=CODE, delta=2, abs, ovrld
    53                           ;ORG 0x30
    54                           
    55     000F  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    56     0010  1006               	bcf	134,0	; pinMode ((PORTB) and 07Fh), 0 output(0)
    57     0011  1281               	bcf	129,5	; OPTION_REG(5)=0 ((OPTION_REG) and 07Fh), 5=0
    58     0012  1181               	bcf	129,3	; OPTION_REG(3)=0 ((OPTION_REG) and 07Fh), 3=0
    59     0013  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    60     0014  3007               	movlw	7	; W=0x07
    61     0015  009F               	movwf	31	; CMCON=W=0x07
    62     0016  1006               	bcf	6,0	; set ((PORTB) and 07Fh), 0 to 0
    63     0017  3002               	movlw	2	; w=0x02
    64     0018  00A0               	movwf	32	; help=w=0x02
    65     0019  168B               	bsf	11,5	; INTCON(2)=((INTCON) and 07Fh), 2=0
    66     001A  178B               	bsf	11,7	; INTCON(2)=((INTCON) and 07Fh), 2=0
    67     001B  0008               	return
    68     001C                     interrupt:
    69     001C  303D               	movlw	61	; w=0x3d
    70     001D  0081               	movwf	1	; TMR0=w=0x3d
    71     001E  110B               	bcf	11,2	; INTCON(2)=((INTCON) and 07Fh), 2=0
    72     001F  0BA0               	decfsz	32,f	; if help - 1 != 0 then:
    73     0020  0008               	return
    74     0021  3001               	movlw	1	; w=0x01
    75     0022  0686               	xorwf	6,f	; ((PORTB) and 07Fh), 0 = !((PORTB) and 07Fh), 0
    76     0023  3002               	movlw	2	; w=0x02
    77     0024  00A0               	movwf	32	; help=w=0x02
    78     0025  0008               	return
    79                           
    80                           	psect	config
    81                           
    82                           ;Config register CONFIG @ 0x2007
    83                           ;	Oscillator Selection bits
    84                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/
      +                          CLKIN
    85                           ;	Watchdog Timer Enable bit
    86                           ;	WDTE = OFF, WDT disabled
    87                           ;	Power-up Timer Enable bit
    88                           ;	PWRTE = OFF, PWRT disabled
    89                           ;	RA5/MCLR/VPP Pin Function Select bit
    90                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
    91                           ;	Brown-out Detect Enable bit
    92                           ;	BOREN = ON, BOD enabled
    93                           ;	Low-Voltage Programming Enable bit
    94                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programming
    95                           ;	Data EE Memory Code Protection bit
    96                           ;	CPD = OFF, Data memory code protection off
    97                           ;	Flash Program Memory Code Protection bit
    98                           ;	CP = OFF, Code protection off
    99     2007                     	org	8199
   100     2007  3F58               	dw	16216


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                               Thu Sep 26 14:00:00 2024

                      TMR0 0001                        help 0020                        main 0000                        init 000F  
                      loop 0001                       CMCON 001F                       PORTB 0006                       TRISB 0086  
                     W_AUX 0070                      INTCON 000B                      STATUS 0003                  OPTION_REG 0081  
                STATUS_AUX 0071                   interrupt 001C  
