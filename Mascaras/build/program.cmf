%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build\main.o
por_vec CODE 0 0 0 17 2 1
config CONFIG 4 2007 2007 1 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 120-14F 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 120-14F 1
CONST 17-7FF 2
ENTRY 17-7FF 2
IDLOC 2000-2003 2
CODE 17-7FF 2
SFR1 80-9F 1
SFR2 100-11F 1
SFR3 180-1EF 1
COMMON 70-7F 1
EEDATA 2100-217F 2
STRCODE 17-7FF 2
STRING 17-7FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build\main.o
0 por_vec CODE >19:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
1 por_vec CODE >21:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
2 por_vec CODE >22:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
3 por_vec CODE >24:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
4 por_vec CODE >25:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
5 por_vec CODE >27:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
6 por_vec CODE >28:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
7 por_vec CODE >29:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
8 por_vec CODE >30:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
9 por_vec CODE >32:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
A por_vec CODE >33:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
B por_vec CODE >35:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
C por_vec CODE >36:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
D por_vec CODE >38:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
E por_vec CODE >39:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
F por_vec CODE >41:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
10 por_vec CODE >43:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
11 por_vec CODE >44:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
12 por_vec CODE >45:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
13 por_vec CODE >46:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
14 por_vec CODE >47:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
15 por_vec CODE >48:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
16 por_vec CODE >50:D:\USER\Documents\My_files\ComputerScienceNew\Test\Asm\school\Mascaras\main.asm
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 17 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Hspace_4 400F 0 ABS 0 - -
__Hudata_bank0 0 0 ABS 0 udata_bank0 -
__Hudata_bank1 0 0 ABS 0 udata_bank1 -
__Hudata_bank2 0 0 ABS 0 udata_bank2 -
__L__absolute__ 0 0 ABS 0 __absolute__ -
__Hpor_vec 2E 0 CODE 0 por_vec -
__Hedata 0 0 ABS 0 edata -
__Hudata 0 0 ABS 0 udata -
__Hconfig 4010 0 CONFIG 4 config -
__Ledata 0 0 ABS 0 edata -
__Ludata 0 0 ABS 0 udata -
__Hcode 0 0 ABS 0 code -
__Hdata 0 0 ABS 0 data -
__Lcode 0 0 ABS 0 code -
__Ldata 0 0 ABS 0 data -
__S0 0 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__S3 0 0 ABS 0 - -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Lpor_vec 0 0 CODE 0 por_vec -
__Ludata_bank0 0 0 ABS 0 udata_bank0 -
__Ludata_bank1 0 0 ABS 0 udata_bank1 -
__Ludata_bank2 0 0 ABS 0 udata_bank2 -
__H__absolute__ 0 0 ABS 0 __absolute__ -
__Hudata_shr 0 0 ABS 0 udata_shr -
__Ludata_shr 0 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
