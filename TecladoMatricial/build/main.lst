

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                                           Thu Oct 03 16:31:20 2024


     1                           	processor	16F628A
     2                           	pagewidth 132
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	code,global,class=CODE,delta=2
     9                           	psect	data,global,class=STRCODE,delta=2,noexec
    10                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	por_vec,global,abs,ovrld,class=CODE,delta=2
    12                           	psect	interrupts,global,abs,ovrld,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14     0008                     
    15                           	psect	edata
    16     0000                     stk_offset	set	0
    17     0000                     auto_size	set	0
    18                           
    19                           ; stack_auto defines a symbol /name/_offset which equates to the
    20                           ; stack offset of the auto object in question
    21     0000                     
    22                           ; stack_param defines a symbol /name/_offset which equates to the
    23                           ; stack offset of the parameter object in question
    24     0000                     
    25                           ; alloc_stack adjusts the SP to allocate space for auto objects
    26                           ; it also links in to the btemp symbol so that can be used
    27     0000                     
    28                           ; restore_stack adjusts the SP to remove all auto and parameter
    29                           ; objects from the stack prior to returning from a function
    30     0000                     main:
    31                           
    32                           	psect	por_vec
    33     0000                     	org	0
    34     0000  2011               	call	init
    35     0001                     loop:
    36     0001  201E               	call	work
    37     0002  2801               	goto	loop
    38                           
    39                           	psect	interrupts
    40     0004                     	org	4
    41     0004  00F0               	movwf	112
    42     0005  0E03               	swapf	3,w
    43     0006  00F1               	movwf	113
    44     0007  1303               	bcf	3,6
    45     0008  1283               	bcf	3,5
    46     0009  201F               	call	RBinterrupt
    47     000A  0886               	movf	6,f
    48     000B  100B               	bcf	11,0
    49     000C  0E71               	swapf	113,w
    50     000D  0083               	movwf	3
    51     000E  0EF0               	swapf	112,f
    52     000F  0E70               	swapf	112,w
    53     0010  0009               	retfie
    54     0011                     init:	
    55                           ;PSECT ruts, global, class=CODE, delta=2, abs, ovrld
    56                           ;ORG 0x30
    57                           
    58     0011  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    59     0012  307C               	movlw	124
    60     0013  0086               	movwf	134
    61     0014  30F0               	movlw	240
    62     0015  0085               	movwf	133
    63     0016  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    64     0017  3007               	movlw	7	; W=0x07
    65     0018  009F               	movwf	31	; CMCON=W=0x07
    66     0019  1006               	bcf	6,0	; set ((PORTB) and 07Fh), 0 to 1
    67     001A  1486               	bsf	6,1	; set ((PORTB) and 07Fh), 1 to 0
    68     001B  158B               	bsf	11,3	; INTCON(3)=((INTCON) and 07Fh), 3=1
    69     001C  178B               	bsf	11,7	; INTCON(7)=((INTCON) and 07Fh), 7=1
    70     001D  0008               	return
    71     001E                     work:
    72                           
    73                           ;MOVLW 0x03
    74                           ;XORWF PORTB, F
    75     001E  0008               	return
    76     001F                     RBinterrupt:
    77     001F  1A06               	btfsc	6,4
    78     0020  2826               	goto	option1
    79     0021  1A86               	btfsc	6,5
    80     0022  282C               	goto	option2
    81     0023  1B06               	btfsc	6,6
    82     0024  2832               	goto	option3
    83     0025  2838               	goto	endSwitch1
    84     0026                     option1:
    85     0026  1806               	btfsc	6,0
    86     0027  3000               	movlw	0
    87     0028  1886               	btfsc	6,1
    88     0029  3006               	movlw	6
    89     002A  0085               	movwf	5
    90     002B  2838               	goto	endSwitch1
    91     002C                     option2:
    92     002C  1806               	btfsc	6,0
    93     002D  3002               	movlw	2
    94     002E  1886               	btfsc	6,1
    95     002F  3003               	movlw	3
    96     0030  0085               	movwf	5
    97     0031  2838               	goto	endSwitch1
    98     0032                     option3:
    99     0032  1806               	btfsc	6,0
   100     0033  3004               	movlw	4
   101     0034  1886               	btfsc	6,1
   102     0035  3005               	movlw	5
   103     0036  0085               	movwf	5
   104     0037  2838               	goto	endSwitch1
   105     0038                     endSwitch1:
   106     0038  0886               	movf	6,f
   107     0039  100B               	bcf	11,0
   108     003A  0008               	return
   109                           
   110                           	psect	config
   111                           
   112                           ;Config register CONFIG @ 0x2007
   113                           ;	Oscillator Selection bits
   114                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/
      +                          CLKIN
   115                           ;	Watchdog Timer Enable bit
   116                           ;	WDTE = OFF, WDT disabled
   117                           ;	Power-up Timer Enable bit
   118                           ;	PWRTE = OFF, PWRT disabled
   119                           ;	RA5/MCLR/VPP Pin Function Select bit
   120                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   121                           ;	Brown-out Detect Enable bit
   122                           ;	BOREN = ON, BOD enabled
   123                           ;	Low-Voltage Programming Enable bit
   124                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programming
   125                           ;	Data EE Memory Code Protection bit
   126                           ;	CPD = OFF, Data memory code protection off
   127                           ;	Flash Program Memory Code Protection bit
   128                           ;	CP = OFF, Code protection off
   129     2007                     	org	8199
   130     2007  3F58               	dw	16216


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                               Thu Oct 03 16:31:20 2024

                      main 0000                        init 0011                        loop 0001                        work 001E  
                     CMCON 001F                       PORTA 0005                       PORTB 0006                       TRISA 0085  
                     TRISB 0086                       W_AUX 0070                      INTCON 000B                      STATUS 0003  
                   option1 0026                     option2 002C                     option3 0032                  STATUS_AUX 0071  
                endSwitch1 0038                 RBinterrupt 001F  
