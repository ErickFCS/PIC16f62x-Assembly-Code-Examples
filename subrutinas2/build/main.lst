

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                                           Thu Apr 11 21:22:31 2024


     1                           	processor	16F628A
     2                           	pagewidth 132
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	code,global,class=CODE,delta=2
     9                           	psect	data,global,class=STRCODE,delta=2,noexec
    10                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	por_vec,global,abs,ovrld,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13     0008                     
    14                           	psect	edata
    15     0000                     stk_offset	set	0
    16     0000                     auto_size	set	0
    17                           
    18                           ; stack_auto defines a symbol /name/_offset which equates to the
    19                           ; stack offset of the auto object in question
    20     0000                     
    21                           ; stack_param defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the parameter object in question
    23     0000                     
    24                           ; alloc_stack adjusts the SP to allocate space for auto objects
    25                           ; it also links in to the btemp symbol so that can be used
    26     0000                     
    27                           ; restore_stack adjusts the SP to remove all auto and parameter
    28                           ; objects from the stack prior to returning from a function
    29     0000                     main:
    30                           
    31                           	psect	por_vec
    32     0000                     	org	0
    33     0000  2002               	call	init
    34     0001  200F               	call	work
    35     0002                     init:
    36     0002  1303               	bcf	3,6	; set RP6 to 0
    37     0003  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    38     0004  1605               	bsf	133,4	; pinMode ((PORTA) and 07Fh), 4 input(1)
    39     0005  1685               	bsf	133,5	; pinMode ((PORTA) and 07Fh), 5 input(1)
    40     0006  1086               	bcf	134,1	; pinMode ((PORTB) and 07Fh), 1 output(0)
    41     0007  1106               	bcf	134,2	; pinMode ((PORTB) and 07Fh), 2 output(0)
    42     0008  1386               	bcf	134,7	; pinMode ((PORTB) and 07Fh), 7 output(0)
    43     0009  1303               	bcf	3,6	; set RP6 to 0
    44     000A  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    45     000B  1086               	bcf	6,1	; set ((PORTB) and 07Fh), 1 to 0
    46     000C  1106               	bcf	6,2	; set ((PORTB) and 07Fh), 2 to 0
    47     000D  1386               	bcf	6,7	; set ((PORTB) and 07Fh), 7 to 0
    48     000E  0008               	return
    49     000F                     work:
    50     000F                     loop:
    51     000F  1A05               	btfsc	5,4	; is ((PORTA) and 07Fh), 4 == 1 then
    52     0010  2015               	call	if1
    53     0011  1E05               	btfss	5,4	; is ((PORTA) and 07Fh), 4 == 0 then
    54     0012  2019               	call	else1
    55     0013  280F               	goto	loop
    56     0014  0008               	return
    57     0015                     if1:
    58     0015  1086               	bcf	6,1	; set ((PORTB) and 07Fh), 1 to 0
    59     0016  1106               	bcf	6,2	; set ((PORTB) and 07Fh), 2 to 0
    60     0017  1386               	bcf	6,7	; set ((PORTB) and 07Fh), 7 to 0
    61     0018  0008               	return
    62     0019                     else1:
    63     0019  1A85               	btfsc	5,5	; is ((PORTA) and 07Fh), 5 == 1 then
    64     001A  201C               	call	if2
    65     001B  0008               	return
    66     001C                     if2:
    67     001C  1486               	bsf	6,1	; set ((PORTB) and 07Fh), 1 to 1
    68     001D  1506               	bsf	6,2	; set ((PORTB) and 07Fh), 2 to 1
    69     001E  1786               	bsf	6,7	; set ((PORTB) and 07Fh), 7 to 1
    70     001F  0008               	return
    71                           
    72                           	psect	config
    73                           
    74                           ;Config register CONFIG @ 0x2007
    75                           ;	Oscillator Selection bits
    76                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/
      +                          CLKIN
    77                           ;	Watchdog Timer Enable bit
    78                           ;	WDTE = OFF, WDT disabled
    79                           ;	Power-up Timer Enable bit
    80                           ;	PWRTE = OFF, PWRT disabled
    81                           ;	RA5/MCLR/VPP Pin Function Select bit
    82                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
    83                           ;	Brown-out Detect Enable bit
    84                           ;	BOREN = ON, BOD enabled
    85                           ;	Low-Voltage Programming Enable bit
    86                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programming
    87                           ;	Data EE Memory Code Protection bit
    88                           ;	CPD = OFF, Data memory code protection off
    89                           ;	Flash Program Memory Code Protection bit
    90                           ;	CP = OFF, Code protection off
    91     2007                     	org	8199
    92     2007  3F58               	dw	16216


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                               Thu Apr 11 21:22:31 2024

                       if1 0015                         if2 001C                        main 0000                        init 0002  
                      loop 000F                        work 000F                       PORTA 0005                       PORTB 0006  
                     TRISA 0085                       TRISB 0086                       else1 0019                      STATUS 0003  
