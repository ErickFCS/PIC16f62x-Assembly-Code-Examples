

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                                           Sun Jun 16 20:02:46 2024


     1                           	processor	16F628A
     2                           	pagewidth 132
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	code,global,class=CODE,delta=2
     9                           	psect	data,global,class=STRCODE,delta=2,noexec
    10                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	por_vec,global,abs,ovrld,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13     0008                     
    14                           	psect	edata
    15     0000                     stk_offset	set	0
    16     0000                     auto_size	set	0
    17                           
    18                           ; stack_auto defines a symbol /name/_offset which equates to the
    19                           ; stack offset of the auto object in question
    20     0000                     
    21                           ; stack_param defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the parameter object in question
    23     0000                     
    24                           ; alloc_stack adjusts the SP to allocate space for auto objects
    25                           ; it also links in to the btemp symbol so that can be used
    26     0000                     
    27                           ; restore_stack adjusts the SP to remove all auto and parameter
    28                           ; objects from the stack prior to returning from a function
    29     0000                     main:
    30                           
    31                           	psect	por_vec
    32     0000                     	org	0
    33     0000  2003               	call	init
    34     0001                     loop:
    35     0001  2011               	call	work
    36     0002  2801               	goto	loop
    37     0003                     init:
    38     0003  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    39     0004  3000               	movlw	0	; w=0x00
    40     0005  0086               	movwf	134	; trisb=w=0x00 pinmode trisb output(0)
    41     0006  1281               	bcf	129,5	; OPTION_REG(5)=0 ((OPTION_REG) and 07Fh), 5=0
    42     0007  1181               	bcf	129,3	; OPTION_REG(3)=0 ((OPTION_REG) and 07Fh), 3=0
    43     0008  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    44     0009  3007               	movlw	7	; W=0x07
    45     000A  009F               	movwf	31	; CMCOM=W=0x07
    46     000B  3010               	movlw	16	; W=0x10
    47     000C  00A1               	movwf	33	; help2=W=0x10
    48     000D  3014               	movlw	20	; w=0x14
    49     000E  00A0               	movwf	32	; help=w=0x14
    50     000F  0186               	clrf	6
    51     0010  0008               	return
    52     0011                     work:
    53     0011  1D0B               	btfss	11,2	; if INTCON(2)==((INTCON) and 07Fh), 2==0 then:
    54     0012  2811               	goto	work
    55     0013  303D               	movlw	61	; w=0x3d
    56     0014  0081               	movwf	1	; TMR0=w=0x3d
    57     0015  110B               	bcf	11,2	; INTCON(2)=((INTCON) and 07Fh), 2=0
    58     0016  03A0               	decf	32,f
    59     0017  1903               	btfsc	3,2	; if Z flag == 1 then:
    60     0018  201A               	call	if1
    61     0019  0008               	return
    62     001A                     if1:
    63     001A  300F               	movlw	15	; w=0x0f
    64     001B  0206               	subwf	6,w	; w=PORTB-W=PORTB-0x0f
    65     001C  1C03               	btfss	3,0	; if C flag == 0
    66     001D  2023               	call	if2
    67     001E  1803               	btfsc	3,0	; if C flag == 1
    68     001F  2025               	call	else2
    69     0020  3014               	movlw	20	; w=0x14
    70     0021  00A0               	movwf	32	; help=w=0x14
    71     0022  0008               	return
    72     0023                     if2:
    73     0023  0A86               	incf	6,f	; PORTB += 1
    74     0024  0008               	return
    75     0025                     else2:
    76     0025  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    77     0026  3007               	movlw	7
    78     0027  0501               	andwf	129,w
    79     0028  3C04               	sublw	4
    80     0029  1C03               	btfss	3,0	; if C flag == 0
    81     002A  2030               	call	if3
    82     002B  1803               	btfsc	3,0	; if C flag == 1
    83     002C  2032               	call	else3
    84     002D  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    85     002E  0186               	clrf	6
    86     002F  0008               	return
    87     0030                     if3:
    88     0030  0381               	decf	129,f
    89     0031  0008               	return
    90     0032                     else3:
    91     0032  3007               	movlw	7
    92     0033  0481               	iorwf	129,f
    93     0034  0008               	return
    94                           
    95                           	psect	config
    96                           
    97                           ;Config register CONFIG @ 0x2007
    98                           ;	Oscillator Selection bits
    99                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/
      +                          CLKIN
   100                           ;	Watchdog Timer Enable bit
   101                           ;	WDTE = OFF, WDT disabled
   102                           ;	Power-up Timer Enable bit
   103                           ;	PWRTE = OFF, PWRT disabled
   104                           ;	RA5/MCLR/VPP Pin Function Select bit
   105                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   106                           ;	Brown-out Detect Enable bit
   107                           ;	BOREN = ON, BOD enabled
   108                           ;	Low-Voltage Programming Enable bit
   109                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programming
   110                           ;	Data EE Memory Code Protection bit
   111                           ;	CPD = OFF, Data memory code protection off
   112                           ;	Flash Program Memory Code Protection bit
   113                           ;	CP = OFF, Code protection off
   114     2007                     	org	8199
   115     2007  3F58               	dw	16216


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                               Sun Jun 16 20:02:46 2024

                       if1 001A                         if2 0023                         if3 0030                        TMR0 0001  
                      help 0020                        main 0000                        init 0003                        loop 0001  
                      work 0011                       PORTB 0006                       TRISB 0086                       help2 0021  
                     else2 0025                       else3 0032                      INTCON 000B                      STATUS 0003  
                OPTION_REG 0081  
