

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                                           Fri Jun 07 16:34:18 2024


     1                           	processor	16F628A
     2                           	pagewidth 132
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	code,global,class=CODE,delta=2
     9                           	psect	data,global,class=STRCODE,delta=2,noexec
    10                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    11                           	psect	por_vec,global,abs,ovrld,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13     0008                     
    14                           	psect	edata
    15     0000                     stk_offset	set	0
    16     0000                     auto_size	set	0
    17                           
    18                           ; stack_auto defines a symbol /name/_offset which equates to the
    19                           ; stack offset of the auto object in question
    20     0000                     
    21                           ; stack_param defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the parameter object in question
    23     0000                     
    24                           ; alloc_stack adjusts the SP to allocate space for auto objects
    25                           ; it also links in to the btemp symbol so that can be used
    26     0000                     
    27                           ; restore_stack adjusts the SP to remove all auto and parameter
    28                           ; objects from the stack prior to returning from a function
    29     0000                     main:
    30                           
    31                           	psect	por_vec
    32     0000                     	org	0
    33     0000  2003               	call	init
    34     0001                     loop:
    35     0001  2010               	call	work
    36     0002  2801               	goto	loop
    37     0003                     init:
    38     0003  1683               	bsf	3,5	; set RP5 to 1 Now in bank 1
    39     0004  3000               	movlw	0
    40     0005  0086               	movwf	134
    41     0006  1685               	bsf	133,5
    42     0007  1281               	bcf	129,5	; OPTION_REG(5)=0 ((OPTION_REG) and 07Fh), 5=0
    43     0008  1181               	bcf	129,3	; OPTION_REG(3)=0 ((OPTION_REG) and 07Fh), 3=0
    44     0009  1283               	bcf	3,5	; set RP5 to 0 Now in bank 0
    45     000A  3007               	movlw	7	; W=0x07
    46     000B  009F               	movwf	31	; CMCOM=W=0x07
    47     000C  1006               	bcf	6,0	; set ((PORTB) and 07Fh), 0 to 0
    48     000D  3002               	movlw	2	; w=0x02
    49     000E  00A0               	movwf	32	; help=w=0x02
    50     000F  0008               	return
    51     0010                     work:
    52     0010  1E85               	btfss	5,5	; if RA(5)==0 then:
    53     0011  201A               	call	if1
    54     0012  190B               	btfsc	11,2	; if ((INTCON) and 07Fh), 2==1 then:
    55     0013  201D               	call	if2
    56     0014  190B               	btfsc	11,2	; if ((INTCON) and 07Fh), 2==1 then:
    57     0015  2023               	call	if3
    58     0016  08A0               	movf	32,f
    59     0017  1903               	btfsc	3,2	; if ZF == 1 then:
    60     0018  2025               	call	if4
    61     0019  0008               	return
    62     001A                     if1:
    63     001A  3002               	movlw	2
    64     001B  00A0               	movwf	32
    65     001C  0008               	return
    66     001D                     if2:
    67                           
    68                           ; BCF INTCON, 2
    69     001D  30D9               	movlw	217	; w=0xd9
    70     001E  0081               	movwf	1	; TMR0=w=0xd9
    71     001F  08A0               	movf	32,f
    72     0020  1D03               	btfss	3,2	; if ZF==0 then:
    73     0021  03A0               	decf	32,f
    74     0022  0008               	return
    75     0023                     if3:
    76     0023  110B               	bcf	11,2
    77     0024  0008               	return
    78     0025                     if4:
    79     0025  0A86               	incf	6,f
    80     0026  3002               	movlw	2
    81     0027  00A0               	movwf	32
    82     0028  0008               	return
    83                           
    84                           	psect	config
    85                           
    86                           ;Config register CONFIG @ 0x2007
    87                           ;	Oscillator Selection bits
    88                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/
      +                          CLKIN
    89                           ;	Watchdog Timer Enable bit
    90                           ;	WDTE = OFF, WDT disabled
    91                           ;	Power-up Timer Enable bit
    92                           ;	PWRTE = OFF, PWRT disabled
    93                           ;	RA5/MCLR/VPP Pin Function Select bit
    94                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
    95                           ;	Brown-out Detect Enable bit
    96                           ;	BOREN = ON, BOD enabled
    97                           ;	Low-Voltage Programming Enable bit
    98                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programming
    99                           ;	Data EE Memory Code Protection bit
   100                           ;	CPD = OFF, Data memory code protection off
   101                           ;	Flash Program Memory Code Protection bit
   102                           ;	CP = OFF, Code protection off
   103     2007                     	org	8199
   104     2007  3F58               	dw	16216


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                               Fri Jun 07 16:34:18 2024

                       if1 001A                         if2 001D                         if3 0023                         if4 0025  
                      TMR0 0001                        help 0020                        main 0000                        init 0003  
                      loop 0001                        work 0010                       PORTA 0005                       PORTB 0006  
                     TRISA 0085                       TRISB 0086                      INTCON 000B                      STATUS 0003  
                OPTION_REG 0081  
